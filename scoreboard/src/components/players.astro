---
const { games, players } = Astro.props;

function getRank(score) {
    const rank = rankTable.indexOf(score);
    switch (rank) {
        case 0: return "ðŸ¥‡";
        case 1: return "ðŸ¥ˆ";
        case 2: return "ðŸ¥‰";
        case rankTable.length - 1: return "ðŸ’©";
        default: return `${rank + 1}.`;
    }
}

function ensureStat(key) {
    if (!stats[key]) {
        stats[key] = { wins: 0, draws: 0, losses: 0 };
    }
}

// Build stats
const stats = {};
for (const g of games)
{
    ensureStat(g.white);
    ensureStat(g.black);

    const w = stats[g.white];
    const b = stats[g.black];

    if (g.result === "1-0") { w.wins += 1; b.losses += 1; }
    else if (g.result === "0-1") { b.wins += 1; w.losses += 1; }
    else if (g.result === "1/2-1/2") { w.draws += 1; b.draws += 1; }
}

// Add players with no games
Object.keys(players).forEach(ensureStat);

// Build leaderboard
const leaderboard = [];
const scores = new Set<number>();
for (const [playerId, stat] of Object.entries<any>(stats))
{
    const score = 2 * stat.wins + stat.draws;
    scores.add(score);
    
    leaderboard.push({
        name: players[playerId],
        wins: stat.wins,
        draws: stat.draws,
        losses: stat.losses,
        score: score,
    });
}

// Sort data
const rankTable = Array.from(scores).sort((a, b) => b - a);
leaderboard.sort((a, b) =>
    b.score - a.score ||
    a.name.localeCompare(b.name)
);
---

<section>
    <h2>Leaderboard</h2>
    <div class="card">
        <div class="scroll-view">
            <table>
                <thead>
                    <tr>
                        <th align="center">Rank</th>
                        <th>Player</th>
                        <th align="center" style="width: 50px;">Win</th>
                        <th align="center" style="width: 50px;">Draw</th>
                        <th align="center" style="width: 50px;">Loss</th>
                    </tr>
                </thead>
                <tbody>
                    {
                        leaderboard.map((row) => (
                            <tr>
                                <td align="center">
                                    <strong>{getRank(row.score)}</strong>
                                </td>
                                <td>
                                    <strong>{row.name}</strong>
                                </td>
                                <td align="center">{row.wins}</td>
                                <td align="center">{row.draws}</td>
                                <td align="center">{row.losses}</td>
                            </tr>
                        ))
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>
