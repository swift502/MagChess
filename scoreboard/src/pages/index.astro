---
import "../styles/global.css";

import Players from "../components/players.astro";
import Games from "../components/games.astro";
import Highlights from "../components/highlights.astro";

import PlayerData from '../../../data/players.json';
import GameData from '../../../data/games.json';
import HighlightData from '../../../data/highlights.json';

const players: Record<string, string> = PlayerData;

const games: Array<{
	timestamp: string;
	white: string;
	black: string;
	result: string;
	pgn: string;
}> = GameData;
games.sort((a, b) => b.timestamp.localeCompare(a.timestamp));

const highlights: Array<{
	timestamp: string;
	pgn: string;
}> = HighlightData;
highlights.sort((a, b) => b.timestamp.localeCompare(a.timestamp));
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="utf-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<link rel="icon" href="favicon.ico" />
		<title>Scoreboard</title>
	</head>
	<body>
		<div class="container">
			<header>
				<div>
					<div class="title">Scoreboard</div>
				</div>
				<div class="toolbar">
					<a href="https://github.com/swift502/MagChess" target="_blank">
						<button class="btn link">MagChess GitHub</button>
					</a>
					<span class="vert-separator"></span>
					<a href="https://chess.com/analysis" target="_blank">
						<button class="btn link">♙ Chess.com</button>
					</a>
					<a href="https://lichess.org/analysis" target="_blank">
						<button class="btn link">♞ Lichess</button>
					</a>
					<a href="https://wintrchess.com" target="_blank">
						<button class="btn link">❄ WintrChess</button>
					</a>
				</div>
			</header>
			<div class="stack">
				<Players games={games} players={players} />
				<Games games={games} players={players} />
				<Highlights highlights={highlights} />
			</div>
		</div>

		<div id="toast" class="toast"></div>

		<script is:inline>
			let timeout;
			const toast = document.getElementById('toast');

			function showToast(msg) {
				toast.textContent = msg;
				toast.classList.add('show');
				if (timeout) clearTimeout(timeout);
				timeout = setTimeout(() => {
					toast.classList.remove('show');
				}, 1500);
			}

			async function copyPGN(button) {
				const pgn = button.getAttribute('data-pgn') || '';
				try {
					await navigator.clipboard.writeText(pgn);
					button.classList.add('success');
					showToast('PGN copied');
					setTimeout(() => button.classList.remove('success'), 350);
				} catch (err) {
					console.error(err);
					showToast('Copy failed');
				}
			}
		</script>
	</body>
</html>
